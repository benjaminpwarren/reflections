What happens when you initialize a repository? Why do you need to do it?

  Initializing creates the hidden .git folder and file structure. Without this, the folder is not a git repository, it's just a folder.

How is the staging area different from the working directory and the repository? What value do you think it offers?

  The staging area is a 'temporary' or intermediate area between your working directory and the repository. It holds things that would be committed, if a commit was performed.

How can you use the staging area to make sure you have one commit per logical change?

  By using the 'git diff --staged' command, one can check the any staged changes against the current commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

  Branches are useful during the implementation of new features or refactors. For example, they allow you to keep a 'current'/master version as well as a separate version for developing the new features, and so on.

  The 'current'/master branch can also continue to be developed in parallel, and branches can later be merged.

How do the diagrams help you visualize the branch structure?

  The diagrams clearly show the branch points in the hierarchy and thus all the antecendants of a branch are easily identifiable. This also means it's easy to identify reachability.

  Whilst it's possible to understand a hierarchy just based on IDs and parent IDs, we effectively convert these into a branch structure diagram in our minds to reach that understanding.
